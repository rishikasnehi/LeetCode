class Solution {
public:
    long long maximumSubarraySum(vector<int>& nums, int k) {
        unordered_set<int> res;
        long long curr_sum = 0;
        long long max_sum = 0;
        int l = 0;
        for(int r = 0; r < nums.size(); r++){
            if(res.find(nums[r]) == res.end()){
                curr_sum += nums[r];
                res.insert(nums[r]);
                if(r - l + 1 == k){
                    max_sum = max(max_sum, curr_sum);
                    curr_sum -= nums[l];
                    res.erase(nums[l]);
                    l++;
                }
            }
            else{
                while(nums[l] != nums[r]){
                    curr_sum -= nums[l];
                    res.erase(nums[l]);
                    l++;
                }
                l++;
            }
        }
        return max_sum;
    }
};
