/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    void reorderList(ListNode* head) {
        if (!head) 
            return;

        ListNode *slow = head, *fast = head;
        while (fast -> next && fast -> next -> next) {
            slow = slow->next;
            fast = fast->next->next;
        }

        ListNode *prev = nullptr, *curr = slow -> next, *next_node = nullptr;
        while (curr) {
            next_node = curr->next;
            curr->next = prev;
            prev = curr;
            curr = next_node;
        }

        slow -> next = NULL;
        ListNode *head2 = prev, *head1 = head, *nextt = NULL;
        while (head2) {
            nextt = head1 -> next;
            head1 -> next = head2;
            head1 = head2;
            head2 = nextt;
        }
    }
};
