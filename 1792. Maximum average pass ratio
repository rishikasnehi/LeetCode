class Solution {
public:

    struct cmp{
        bool operator()(pair<int,int> a, pair<int,int> b){
            double ad = (a.first+1)/(double)(a.second+1) - (a.first)/(double)a.second;
            double bd = (b.first+1)/(double)(b.second+1) - (b.first)/(double)b.second;
            return ad < bd;
        }
    };

    double maxAverageRatio(vector<vector<int>>& classes, int extraStudents) {
        double total = 0;
        priority_queue<pair<int,int>, vector<pair<int,int>>, cmp> pq;

        for(auto c : classes)
            pq.push({c[0], c[1]});

        while(extraStudents--){
            auto curr = pq.top();
            pq.pop();
            curr.first++;
            curr.second++;
            pq.push(curr);
        }

        while(!pq.empty()){
            auto temp = pq.top(); 
            pq.pop();
            total += temp.first / (double) temp.second;
        }
        return total / (double) classes.size();
    }
};
