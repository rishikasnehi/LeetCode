class Solution {
public:
    vector<int> maxSubsequence(vector<int>& nums, int k) {
        priority_queue<pair<int, int>, vector<pair<int, int>>, greater<pair<int, int>>> pq;
        for (int i = 0; i < nums.size(); ++i) {
            pq.push({nums[i], i});
            if (pq.size() > k) {
                pq.pop();
            }
        }
        
        vector<pair<int, int>> result;
        while (!pq.empty()) {
            result.push_back(pq.top());
            pq.pop();
        }
        
        sort(result.begin(), result.end(), [](const pair<int, int>& a, const pair<int, int>& b) {
            return a.second < b.second;
        });
        
        vector<int> res;
        for (const auto& p : result) {
            res.push_back(p.first);
        }
        
        return res;
    }
};
