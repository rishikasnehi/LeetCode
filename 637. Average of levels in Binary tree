/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<double> averageOfLevels(TreeNode* root) {
        queue<TreeNode*> q;
        vector<double> ans;
        double sum = 0;
        int cnt = 0;
        if(!root)
            return {};
        q.push(root);
        q.push(NULL);
        while(!q.empty()){
            TreeNode* temp = q.front();
            q.pop();

            if(temp == NULL){
                double avg = sum/cnt;
                ans.push_back(avg);
                cnt = 0;
                sum = 0;
                if(q.size() != 0){
                    q.push(NULL);
            }
            continue;
        }
        sum += temp -> val;
        cnt++;
        if(temp -> left)
            q.push(temp -> left);
        if(temp -> right)
            q.push(temp -> right);
        }
        return ans;
    }
};
