/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int getMinimumDifference(TreeNode* root) {
        vector<int> v;
        int i, min_diff = INT_MAX;
        inorder(root, v);
        int diff = 0, n = v.size();
        for(int i = 1; i < n; i++){
            diff = v[i] - v[i - 1];
            if(diff < min_diff){
                min_diff = diff;
            }
        }
        return min_diff;
    }

    void inorder(TreeNode* root, vector<int> &v){
        if(root == NULL)
            return;
        inorder(root->left, v);
        v.push_back(root->val);
        inorder(root -> right, v);
    }
};
