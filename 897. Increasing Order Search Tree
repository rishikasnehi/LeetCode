/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* increasingBST(TreeNode* root) {
        if (root == nullptr)
            return nullptr;
        vector<int> v;
        inorder(root, v);
        TreeNode* dummy = new TreeNode(-1);
        TreeNode* curr = dummy;
        for(int i = 0; i < v.size(); ++i){
            curr -> right = new TreeNode(v[i]);
            curr = curr -> right;
        }
        return dummy -> right;    
    }
    void inorder(TreeNode* root, vector<int> &v){
        if(root == NULL)
            return;
        inorder(root -> left, v);
        v.push_back(root -> val);
        inorder(root -> right, v);
    } 
};
