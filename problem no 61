/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* rotateRight(ListNode* head, int k) {
        if(!head || !head -> next || k == 0)
            return head;
        ListNode* tail = head;
        int len = 1;
        while(tail -> next != nullptr){
            len++;
            tail = tail -> next;
        }
        k = k % len;
        if(k == 0)
            return head;
        tail -> next = head;
        ListNode* new_tail = head;
        k = len - k - 1;
        for(int i = 0; i < k; i++)
            new_tail = new_tail -> next;
        ListNode* new_head = new_tail -> next;
        new_tail -> next = nullptr;
        return new_head;
    }
};
