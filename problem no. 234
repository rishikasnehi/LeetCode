/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    bool isPalindrome(ListNode* head) {
        stack<int> s;
        ListNode *temp = new ListNode();
        temp = head;
        while(temp){
            // cout << temp->val << endl;
            s.push(temp->val);
            temp = temp->next;
        }
        // while(!s.empty())
        // {
        //     cout << s.top() << " ";
        //     s.pop();
        // }
        while(!s.empty()){
            // cout << head->val;
            if(s.top() != head->val){
                return false;
                break;
            }
            s.pop();
            head = head->next;
        }

        return true;
    }
};
