class Solution {
public:
    int deleteGreatestValue(vector<vector<int>>& grid) {
        int m = grid.size();
        int n = grid[0].size();
        int answer = 0;
        cout << m << n;

        priority_queue<int, vector<int>> pq[m];

        for (int i = 0; i < m; ++i) {
            for (int j = 0; j < n; ++j) {
                pq[i].push(grid[i][j]);
            }
        }

        while (n > 0) {
            int maxDeleted = INT_MIN;

            for (int i = 0; i < m; ++i) {
                if (!pq[i].empty()) {
                    int max_ele = pq[i].top();
                    pq[i].pop();
                    maxDeleted = max(maxDeleted, max_ele);
                }
            }
            answer += maxDeleted;
        --n;
    }

    return answer;
    }
};
