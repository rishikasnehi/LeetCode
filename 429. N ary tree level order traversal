/*
// Definition for a Node.
class Node {
public:
    int val;
    vector<Node*> children;

    Node() {}

    Node(int _val) {
        val = _val;
    }

    Node(int _val, vector<Node*> _children) {
        val = _val;
        children = _children;
    }
};
*/

class Solution {
public:
    vector<vector<int>> levelOrder(Node* root) {
        if(!root)
            return{};

        queue<Node*> q;
        q.push(root);

        vector<vector<int>> levels;

        while(!q.empty()){
            int n = q.size();
            vector<int> level;
            for(int i = 1; i <= n; i++){
                auto curr = q.front();
                level.push_back(curr -> val);
                q.pop();

                for(auto child : curr -> children)
                    q.push(child);
            }
            levels.push_back(level);

        }
        return levels;
    }
};
