/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool isCousins(TreeNode* root, int x, int y) {
        TreeNode* parentX = nullptr;
        TreeNode* parentY = nullptr;
        int depthX = -1;
        int depthY = -1;
        helper(root, nullptr, 0, x, y, parentX, parentY, depthX, depthY);
        return depthX == depthY && parentX != parentY;
    }

    void helper(TreeNode* root, TreeNode* parent, int depth, int x, int y, TreeNode* &parentX, TreeNode* &parentY, int &depthX, int &depthY){
        if(!root)
            return;

        if(root -> val == x){
            parentX = parent;
            depthX = depth;
        }

        if(root -> val == y){
            parentY = parent;
            depthY = depth;
        }

        helper(root -> left, root, depth + 1, x, y, parentX, parentY, depthX, depthY);
        helper(root -> right, root, depth + 1, x, y, parentX, parentY, depthX, depthY); 
    }
};
