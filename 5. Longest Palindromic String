class Solution {
public:
    string longestPalindrome(string s) {
        if(s.empty())
            return "";
        int start = 0, end = 0;
        for(int i = 0; i < s.length(); i++){
            int odd_Palindrome_len = expand(s, i, i);
            int even_Palindrome_len = expand(s, i, i + 1);
            int maxLen = max(odd_Palindrome_len, even_Palindrome_len);

            if(maxLen > end - start){
                start = i - (maxLen - 1)/ 2;
                end = i + maxLen / 2;
            }
        }

        return s.substr(start, end - start + 1);
    }

     int expand(const string& s, int left, int right) {
        while (left >= 0 && right < s.length() && s[left] == s[right]) {
            left--;
            right++;
        }
        return right - left - 1;
    }
};
