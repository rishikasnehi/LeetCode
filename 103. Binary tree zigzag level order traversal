/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {
        if(!root)
            return {};

        queue<TreeNode*> q;
        vector<vector<int>> res;

        q.push(root);
        bool l_to_r = true;
        while(!q.empty()){
            int qsize = q.size();
            vector<int> v;
            
            for (int i = 0; i < qsize; ++i) {
                TreeNode* node = q.front();
                q.pop();
                v.push_back(node->val);
                
                if(node -> left)
                    q.push(node -> left);
                if(node -> right)
                    q.push(node -> right);
            
            }
            if(!l_to_r)
                reverse(v.begin(), v.end());
            l_to_r = !l_to_r;
            res.push_back(v);
        }
        return res;
    }
};
