/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool findTarget(TreeNode* root, int k) {
        vector<int> v;
        solve(root, v);
        int l = 0;
        int r = v.size();
        while(l < r){
            int sum = v[l] + v[r];
            if(k == sum)
                return true;
            else if(k < sum)
                r--;
            else
                l++;
        }
        return false;
    }

    void solve(TreeNode* root, vector<int> &v){
        if(!root)
            return;
        solve(root -> left, v);
        v.push_back(root -> val);
        solve(root -> right, v);
    }
};
