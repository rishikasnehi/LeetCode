/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool isSameTree(TreeNode* p, TreeNode* q) {
        queue<TreeNode*> qp;
        queue<TreeNode*> qq;
        
        qp.push(p);
        qq.push(q);
        
        while (!qp.empty() && !qq.empty()) {
            TreeNode* node_p = qp.front();
            TreeNode* node_q = qq.front();
            qp.pop();
            qq.pop();
            
            if (!node_p && !node_q)
                continue;
            if (!node_p || !node_q)
                return false;
            if (node_p->val != node_q->val)
                return false;
            qp.push(node_p->left);
            qp.push(node_p->right);
            qq.push(node_q->left);
            qq.push(node_q->right);
        }
        return qp.empty() && qq.empty();
    }
};
