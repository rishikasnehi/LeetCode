/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* removeNthFromEnd(ListNode* head, int n) {
        ListNode* dummy = new ListNode(0,head);
        ListNode* temp = dummy;
        ListNode* prev = dummy;
        int len = count(head);
        int position = (len - n);

        if(position == 0){
            dummy -> next = head -> next;
            delete(head);
            ListNode* newhead = dummy -> next;
            delete(dummy);
            return newhead;
        }
        for (int i = 0; i <= position; ++i){
            prev = temp;
            temp = temp -> next;
        }
        prev -> next = temp -> next;
        delete(temp);
        ListNode* newhead = dummy -> next;
        delete(dummy);
        return newhead;
    }

    int count(ListNode* head){
        int cnt = 0;
        ListNode* temp = head;
        while(temp != nullptr){
            cnt++;
            temp = temp -> next;
        }
        return cnt;
    }
};
